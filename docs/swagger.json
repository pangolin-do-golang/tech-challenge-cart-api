{
    "swagger": "2.0",
    "info": {
        "description": "Fast Food API for FIAP Tech course",
        "title": "Tech Challenge Food API",
        "contact": {},
        "version": "0.1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/cart/add-product": {
            "post": {
                "description": "Adds a Product to Customer's Cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "description": "AddProductPayload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.AddProductPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"Internal Server Error\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/cart/edit-product": {
            "post": {
                "description": "Edits a Product from Customer's Cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "description": "EditProductPayload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.EditProductPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"Internal Server Error\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/cart/overview": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "description": "GetCartPayload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.GetCartPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/cart/remove-product": {
            "post": {
                "description": "Removes a Product from Customer's Cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "description": "RemoveProductPayload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RemoveProductPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Search products with given criteria",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of Product",
                        "name": "search",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Category of Product",
                        "name": "category",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product.Product",
                        "schema": {
                            "$ref": "#/definitions/product.Product"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"something went bad :(\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete a Product with given ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Product",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"something went bad :(\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.AddProductPayload": {
            "type": "object",
            "required": [
                "client_id",
                "product_id",
                "quantity"
            ],
            "properties": {
                "client_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "comments": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                }
            }
        },
        "controller.EditProductPayload": {
            "type": "object",
            "required": [
                "client_id",
                "product_id",
                "quantity"
            ],
            "properties": {
                "client_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "comments": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "quantity": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "controller.GetCartPayload": {
            "type": "object",
            "required": [
                "client_id"
            ],
            "properties": {
                "client_id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "controller.RemoveProductPayload": {
            "type": "object",
            "required": [
                "client_id",
                "product_id"
            ],
            "properties": {
                "client_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "product_id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "product.Product": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        }
    }
}